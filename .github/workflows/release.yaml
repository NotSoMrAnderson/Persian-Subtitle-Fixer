name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    env:
      APP_VERSION: ${{ github.ref_name }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller chardet PyQt5

      - name: Build with PyInstaller
        run: |
          pyinstaller PersianSubtitleFixer.spec

      - name: Rename output with version
        if: success()
        run: |
          ext=""
          if [[ "${{ runner.os }}" == "Windows" ]]; then ext=".exe"; fi
          mv dist/PersianSubtitleFixer/PersianSubtitleFixer$ext dist/PersianSubtitleFixer-${{ runner.os }}-${{ env.APP_VERSION }}$ext
        shell: bash

      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}
          path: dist/PersianSubtitleFixer-*

      - name: Windows Code Signing (optional)
        if: runner.os == 'Windows' && env.WINDOWS_CERT_BASE64 != '' && env.WINDOWS_CERT_PASSWORD != ''
        shell: bash
        run: |
          echo "Signing executable..."
          certPath="$RUNNER_TEMP/cert.pfx"
          echo "$WINDOWS_CERT_BASE64" | base64 -d > "$certPath"
          "/c/Program Files (x86)/Windows Kits/10/bin/x64/signtool.exe" sign \
            /f "$certPath" \
            /p "$WINDOWS_CERT_PASSWORD" \
            /tr http://timestamp.digicert.com \
            /td sha256 \
            /fd sha256 \
            dist/PersianSubtitleFixer-Windows-${{ env.APP_VERSION }}.exe

      - name: Zip
        run: |
          cd dist
          zip -r PersianSubtitleFixer-${{ runner.os }}-${{ env.APP_VERSION }}.zip PersianSubtitleFixer-*
        shell: bash

      - name: Upload Zipped Output
        uses: actions/upload-artifact@v4
        with:
          name: PersianSubtitleFixer-${{ runner.os }}-${{ env.APP_VERSION }}
          path: dist/PersianSubtitleFixer-${{ runner.os }}-${{ env.APP_VERSION }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.zip
