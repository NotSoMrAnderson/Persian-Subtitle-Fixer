name: Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    env:
      ICON_ICO: assets/comics-mask_97446.ico
      ICON_ICNS: assets/comics-mask_97446.icns
      APP_VERSION: 1.0.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller PyQt5 chardet

      - name: Build with PyInstaller
        run: |
          pyinstaller main.py \
            --onefile \
            --windowed \
            --name=PersianSubtitleFixer \
            --hidden-import=PyQt5.sip \
            --hidden-import=PyQt5.QtWidgets \
            --hidden-import=PyQt5.QtCore \
            --hidden-import=PyQt5.QtGui \
            --clean

      - name: Rename output with version
        if: success()
        shell: bash
        run: |
          ext=""
          if [ "${{ runner.os }}" = "Windows" ]; then ext=".exe"; fi
          mv dist/PersianSubtitleFixer$ext dist/PersianSubtitleFixer-${{ runner.os }}-${{ env.APP_VERSION }}$ext

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ runner.os }}
          path: dist/PersianSubtitleFixer-*

      - name: Windows Code Signing (optional)
        if: success() && (runner.os == 'Windows')
        shell: bash
        run: |
          if [[ -n "$WINDOWS_CERT_BASE64" && -n "$WINDOWS_CERT_PASSWORD" ]]; then
            echo "Signing executable..."
            certPath="$RUNNER_TEMP/cert.pfx"
            echo "$WINDOWS_CERT_BASE64" | base64 -d > "$certPath"
            "/c/Program Files (x86)/Windows Kits/10/bin/x64/signtool.exe" sign \
              /f "$certPath" \
              /p "$WINDOWS_CERT_PASSWORD" \
              /tr http://timestamp.digicert.com \
              /td sha256 \
              /fd sha256 \
              dist/PersianSubtitleFixer-${{ runner.os }}-${{ env.APP_VERSION }}.exe
          else
            echo "Skipping signing: secrets not set"
          fi
        env:
          WINDOWS_CERT_BASE64: ${{ secrets.WINDOWS_CERT_BASE64 }}
          WINDOWS_CERT_PASSWORD: ${{ secrets.WINDOWS_CERT_PASSWORD }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
